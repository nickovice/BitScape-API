name: API Tests (Unit + e2e)

on:
  push:
    branches: [ main, testing ]
  pull_request:
    branches: [ main, testing ]

jobs:
  unit:
    name: Run unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  e2e:
    name: Run e2e tests
    runs-on: ubuntu-latest
    needs: unit

    services:
      postgres:
        image: postgres:latest
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      DB_DATABASE: test

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Wait for DB
        run: |
          # Wait until Postgres is ready (use the configured POSTGRES_USER)
          until pg_isready -h localhost -U postgres; do
            echo "Waiting for database..."
            sleep 2
          done
          # Small extra delay to allow DB to finish init tasks
          sleep 1

      - name: Run e2e tests
        run: npm run test:e2e
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
